{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\sparis\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Login.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    dbParent,\n    dbChildren,\n    setAccountIdState,\n    accountIdState,\n    setLogedInUser,\n    logedInUser\n  } = _ref;\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isChild, setIsChild] = useState(false);\n  const [isAdult, setIsAdult] = useState(false);\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault(); // Find user login info\n\n    const userChild = dbChildren.children.find(user => user.userName === logedInUser.userName);\n    const userParent = dbParent.parents.find(user => user.userName === logedInUser.userName); // Check if the user is Child\n\n    if (userChild) {\n      if (userChild.password !== logedInUser.password) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsChild(true);\n        setLogedInUser(previousState => {\n          return { ...previousState,\n            accountId: userChild.accountId\n          };\n        });\n        setAccountIdState(userChild.accountId);\n        {\n          console.log(userChild);\n          console.log(logedInUser);\n        }\n      }\n    } else {\n      // Check if the user is Adult\n      if (userParent) {\n        if (userParent.password !== logedInUser.password) {\n          // Invalid password\n          setErrorMessages({\n            name: \"pass\",\n            message: errors.pass\n          });\n        } else {\n          setIsAdult(true);\n          setLogedInUser(previousState => {\n            return { ...previousState,\n              accountId: userParent.accountId\n            };\n          });\n          setAccountIdState(userParent.accountId);\n          {\n            console.log(userParent.accountId);\n          }\n        }\n      } else {\n        // Username not found\n        setErrorMessages({\n          name: \"uname\",\n          message: errors.uname\n        });\n      }\n    }\n  };\n\n  console.log('accountId', accountIdState); // Generate JSX code for error message\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputBox,\n          type: \"text\",\n          name: \"uname\",\n          onChange: event => setLogedInUser(previousState => {\n            return { ...previousState,\n              userName: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          className: styles.inputBox,\n          onChange: event => setLogedInUser(previousState => {\n            return { ...previousState,\n              password: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: styles.submitButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: isChild ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Children\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.childButton,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" V\\xE4lkommen \", logedInUser.userName.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 14\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 69\n        }, this), \" klicka f\\xF6r att se din sida\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isAdult ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Adults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.adultButton,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" V\\xE4lkommen \", logedInUser.userName.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 72\n          }, this), \" klicka f\\xF6r att se din sida\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this) : renderForm\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"PZhd3P/pgDjc/LbVVBsHoxOP4U8=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/sparis/src/components/Login/Login.js"],"names":["React","useState","styles","Link","Login","dbParent","dbChildren","setAccountIdState","accountIdState","setLogedInUser","logedInUser","errorMessages","setErrorMessages","isChild","setIsChild","isAdult","setIsAdult","errors","uname","pass","handleSubmit","event","preventDefault","userChild","children","find","user","userName","userParent","parents","password","name","message","previousState","accountId","console","log","renderErrorMessage","error","renderForm","loginForm","title","inputContainer","inputBox","target","value","buttonContainer","submitButton","app","childButton","toUpperCase","adultButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Login({ dbParent, dbChildren,setAccountIdState,accountIdState,setLogedInUser,logedInUser }) {\r\n  // React States\r\n \r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isChild, setIsChild] = useState(false);\r\n  const [isAdult, setIsAdult] = useState(false);\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\",\r\n  };\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    // Find user login info\r\n    const userChild = dbChildren.children.find(\r\n      (user) => user.userName === logedInUser.userName\r\n    );\r\n    const userParent = dbParent.parents.find(\r\n      (user) => user.userName === logedInUser.userName\r\n    );\r\n\r\n\r\n    // Check if the user is Child\r\n    if (userChild) {\r\n      if (userChild.password !== logedInUser.password) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsChild(true);\r\n        setLogedInUser((previousState) => {\r\n          return { ...previousState, accountId: userChild.accountId };\r\n        });\r\n        setAccountIdState(userChild.accountId\r\n          );\r\n\r\n        {\r\n          console.log(userChild);\r\n          console.log(logedInUser);\r\n        }\r\n      }\r\n    } else {\r\n     // Check if the user is Adult\r\n\r\n      if (userParent) {\r\n        if (userParent.password !== logedInUser.password) {\r\n          // Invalid password\r\n          setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        } else {\r\n          setIsAdult(true);\r\n          setLogedInUser((previousState) => {\r\n            return { ...previousState, accountId: userParent.accountId };\r\n            \r\n          });\r\n          setAccountIdState(userParent.accountId);\r\n          {\r\n            console.log(userParent.accountId);\r\n          }\r\n        }\r\n      } else {\r\n        // Username not found\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n      }\r\n    }\r\n  };\r\n  console.log('accountId',accountIdState);\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className={styles.error}>{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className={styles.loginForm}>\r\n          <div className={styles.title}>Sign In</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.inputContainer}>\r\n          <label>Username </label>\r\n          <input className={styles.inputBox }\r\n            type=\"text\"\r\n            name=\"uname\"\r\n            onChange={(event) =>\r\n              setLogedInUser((previousState) => {\r\n                return { ...previousState, userName: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <label>Password </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"pass\" className={styles.inputBox }\r\n            onChange={(event) =>\r\n              setLogedInUser((previousState) => {\r\n                return { ...previousState, password: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <input type=\"submit\" className={styles.submitButton }/>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n    \r\n        {isChild ? (\r\n          <Link to=\"/Children\">\r\n            <button className={styles.childButton}\r\n             \r\n            >\r\n             <b> Välkommen {logedInUser.userName.toUpperCase()}</b> <br/> klicka för att se din sida\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <>\r\n            {isAdult ? (\r\n              <Link to=\"/Adults\">\r\n                <button className={styles.adultButton} >\r\n                 <b> Välkommen {logedInUser.userName.toUpperCase()}</b><br/> klicka för att se din sida\r\n                </button>\r\n              </Link>\r\n            ) : (\r\n              renderForm\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}