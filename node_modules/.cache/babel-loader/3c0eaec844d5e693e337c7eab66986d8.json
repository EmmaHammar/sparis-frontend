{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\sparis\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Login.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    dbParent,\n    dbChildren\n  } = _ref;\n  // React States\n  const [logedUser, setLogedUser] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isAdult, setIsAdult] = useState(false);\n  const [isChild, setIsChild] = useState(false); // User Login info\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault(); // Find user login info\n\n    const userParent = dbParent.parents.find(account => account.userName === logedUser.userName);\n    const userChild = dbChildren.children.find(account => account.userName === logedUser.userName);\n    console.log(\"userParent\", userParent); // Compare user info\n\n    if (userParent) {\n      if (userParent.password !== logedUser.password) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsAdult(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n\n    if (userChild) {\n      if (userChild.password !== logedUser.password) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsChild(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          onChange: event => setLogedUser(previousState => {\n            return { ...previousState,\n              UserName: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          onChange: event => setLogedUser(previousState => {\n            return { ...previousState,\n              password: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [console.log(logedUser), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), isAdult ? /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/Adults\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Wellcome \", logedUser.userName, \" Click  to see your page \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : isChild ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is child and successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"MeM7P5DgDBqDUasrYeI+KGLqXY4=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/sparis/src/components/Login/Login.js"],"names":["React","useState","styles","Link","Login","dbParent","dbChildren","logedUser","setLogedUser","userName","password","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","isAdult","setIsAdult","isChild","setIsChild","database","username","errors","uname","pass","handleSubmit","event","preventDefault","userParent","parents","find","account","userChild","children","console","log","name","message","renderErrorMessage","error","renderForm","form","inputContainer","previousState","UserName","target","value","buttonContainer","app","loginForm","title","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Login({ dbParent, dbChildren }) {\r\n  // React States\r\n  const [logedUser, setLogedUser] = useState({ userName: \"\", password: \"\" });\r\n\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [isAdult, setIsAdult] = useState(false);\r\n  const [isChild, setIsChild] = useState(false);\r\n\r\n  // User Login info\r\n  const database = [\r\n    {\r\n      username: \"user1\",\r\n      password: \"pass1\",\r\n    },\r\n    {\r\n      username: \"user2\",\r\n      password: \"pass2\",\r\n    },\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\",\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    // Find user login info\r\n    const userParent = dbParent.parents.find(\r\n      (account) => account.userName === logedUser.userName\r\n    );\r\n    const userChild = dbChildren.children.find(\r\n      (account) => account.userName === logedUser.userName\r\n    );\r\n\r\n    console.log(\"userParent\", userParent);\r\n    // Compare user info\r\n    if (userParent) {\r\n      if (userParent.password !== logedUser.password) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsAdult(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n    if (userChild) {\r\n      if (userChild.password !== logedUser.password) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsChild(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className={styles.error}>{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className={styles.form}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.inputContainer}>\r\n          <label>Username </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"uname\"\r\n            onChange={(event) =>\r\n              setLogedUser((previousState) => {\r\n                return { ...previousState, UserName: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <label>Password </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"pass\"\r\n            onChange={(event) =>\r\n              setLogedUser((previousState) => {\r\n                return { ...previousState, password: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      {console.log(logedUser)}\r\n\r\n      <div className={styles.loginForm}>\r\n        <div className={styles.title}>Sign In</div>\r\n        {isAdult ? (\r\n            <Link to={{ pathname: \"/Adults\" }}>\r\n             \r\n              <button>Wellcome {logedUser.userName} Click  to see your page </button>\r\n            </Link>\r\n        ) : isChild ? (\r\n          <div>User is child and successfully logged in</div>\r\n        ) : (\r\n          renderForm\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}