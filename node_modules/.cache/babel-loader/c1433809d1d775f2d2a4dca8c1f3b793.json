{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\sparis\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Login.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    dbParent,\n    dbChildren\n  } = _ref;\n  // React States\n  const [logedUser, setLogedUser] = useState({\n    UserName: '',\n    password: ''\n  });\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isAdult, setIsAdult] = useState(false);\n  const [isChild, setIsChild] = useState(false); // User Login info\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault(); // Find user login info\n\n    const userParent = dbParent.parents.find(user => user.username === logedUser.UserName);\n    console.log(userParent); // Compare user info\n\n    if (userParent) {\n      if (userParent.password !== logedUser.password) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          onChange: event => setLogedUser(previousState => {\n            return { ...previousState,\n              UserName: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          onChange: event => setLogedUser(previousState => {\n            return { ...previousState,\n              password: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 4\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [console.log(logedUser), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 8\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Login, \"FpY4iuMTh3RzpgTcJYXB8kzEYxk=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/sparis/src/components/Login/Login.js"],"names":["React","useState","styles","Login","dbParent","dbChildren","logedUser","setLogedUser","UserName","password","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","isAdult","setIsAdult","isChild","setIsChild","database","username","errors","uname","pass","handleSubmit","event","preventDefault","userParent","parents","find","user","console","log","name","message","renderErrorMessage","error","renderForm","form","inputContainer","previousState","target","value","buttonContainer","app","loginForm","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\nexport default function Login({ dbParent, dbChildren }) {\r\n // React States\r\n const [logedUser,setLogedUser]=useState({UserName:'',password:''});\r\n\r\n const [errorMessages, setErrorMessages] = useState({});\r\n const [isSubmitted, setIsSubmitted] = useState(false);\r\n const [isAdult, setIsAdult] = useState(false);\r\n const [isChild, setIsChild] = useState(false);\r\n\r\n // User Login info\r\n const database = [\r\n   {\r\n     username: \"user1\",\r\n     password: \"pass1\"\r\n   },\r\n   {\r\n     username: \"user2\",\r\n     password: \"pass2\"\r\n   }\r\n ];\r\n\r\n const errors = {\r\n   uname: \"invalid username\",\r\n   pass: \"invalid password\"\r\n };\r\n\r\n const handleSubmit = (event) => {\r\n   //Prevent page reload\r\n   event.preventDefault();\r\n\r\n   \r\n\r\n   // Find user login info\r\n   const userParent = dbParent.parents.find((user) => user.username === logedUser.UserName);\r\nconsole.log(userParent);\r\n   // Compare user info\r\n   if (userParent) {\r\n     if (userParent.password !== logedUser.password) {\r\n       // Invalid password\r\n       setErrorMessages({ name: \"pass\", message: errors.pass });\r\n     } else {\r\n       setIsSubmitted(true);\r\n     }\r\n   } else {\r\n     // Username not found\r\n     setErrorMessages({ name: \"uname\", message: errors.uname });\r\n   }\r\n };\r\n\r\n // Generate JSX code for error message\r\n const renderErrorMessage = (name) =>\r\n   name === errorMessages.name && (\r\n     <div className={styles.error}>{errorMessages.message}</div>\r\n   );\r\n\r\n // JSX code for login form\r\n const renderForm = (\r\n    \r\n   <div className={styles.form}>\r\n     <form onSubmit={handleSubmit}>\r\n       <div className={styles.inputContainer}>\r\n         <label>Username </label>\r\n         <input type=\"text\" name=\"uname\" onChange={(event)=>setLogedUser(previousState=>{return{...previousState,UserName:event.target.value}})}required />\r\n         {renderErrorMessage(\"uname\")}\r\n       </div>\r\n       <div className={styles.inputContainer}>\r\n         <label>Password </label>\r\n         <input type=\"password\" name=\"pass\"  onChange={(event)=>setLogedUser(previousState=>{return{...previousState,password:event.target.value}})}required />\r\n         {renderErrorMessage(\"pass\")}\r\n       </div>\r\n       <div className={styles.buttonContainer}>\r\n         <input type=\"submit\" />\r\n       </div>\r\n     </form>\r\n   </div>\r\n      \r\n );\r\n\r\n return (\r\n   <div className={styles.app}>\r\n            {console.log(logedUser)}\r\n\r\n     <div className={styles.loginForm}>\r\n       <div className={styles.title}>Sign In</div>\r\n       {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n     </div>\r\n   </div>\r\n );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}