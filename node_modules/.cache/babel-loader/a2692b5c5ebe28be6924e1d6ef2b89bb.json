{"ast":null,"code":"var _jsxFileName = \"/Users/emmahammar/Desktop/repos/repos-jsfordjupn/repos-react/sparis/src/pages/Adults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NavFooterAdults from '../containers/Adults/NavFooterAdults';\nimport SettingsAdults from '../containers/Adults/SettingsAdults';\nimport TotalSavingsAdults from '../containers/Adults/TotalSavingsAdults';\nimport SavingGoalAdults from '../containers/Adults/SavingGoalAdults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Adults(_ref) {\n  _s();\n\n  let {\n    dbAccount,\n    dbParent,\n    dbChildren\n  } = _ref;\n  //NOTE expect accountId from login ok? \n  const [loginAccountId, setLoginAccountId] = useState(1); //get from local storage\n\n  const [clickedChildObj, setClickedChildObj] = useState({});\n  const [showChildProfile, setShowChildProfile] = useState(false); // const [goalAmount, setGoalAmount] = useState(Number);\n\n  const [savingGoalExists, setSavingGoalExists] = useState(false);\n\n  const handleClick = evt => {\n    // reset savingGoalExists\n    if (savingGoalExists === true) {\n      setSavingGoalExists(false);\n    }\n\n    if (savingGoalExists === false) {\n      setSavingGoalExists(true);\n    }\n\n    setShowChildProfile(true); //Save clickedChildInfo:\n    //NOTE if === => not working :( \n\n    const isChildId = child => {\n      return child.childId == evt.target.id;\n    };\n\n    setClickedChildObj(dbChildren.children.find(isChildId)); //Fix error:\n\n    console.log(\"clickedChildObj goalAmount\", dbChildren.children.find(isChildId).goalAmount);\n\n    if (dbChildren.children.find(isChildId).goalAmount != 0) {\n      setSavingGoalExists(true);\n      console.log(\"savingGoalExists\", savingGoalExists);\n    } else {\n      console.log(\"savingGoalNOT exists\", savingGoalExists);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"adultsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(SettingsAdults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), dbChildren.children.map((child, index) => child.accountId === loginAccountId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      id: child.childId,\n      value: child.userName,\n      onClick: handleClick,\n      children: child.userName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : \"\"), showChildProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: clickedChildObj.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SavingGoalAdults, {\n        clickedChildObj: clickedChildObj,\n        savingGoalExists: savingGoalExists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TotalSavingsAdults, {\n        clickedChildObj: clickedChildObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : \"\", /*#__PURE__*/_jsxDEV(NavFooterAdults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Adults, \"tH9V8Db+Q2uXv6RMOdbIBuUjpGE=\");\n\n_c = Adults;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adults\");","map":{"version":3,"sources":["/Users/emmahammar/Desktop/repos/repos-jsfordjupn/repos-react/sparis/src/pages/Adults.js"],"names":["React","useState","NavFooterAdults","SettingsAdults","TotalSavingsAdults","SavingGoalAdults","Adults","dbAccount","dbParent","dbChildren","loginAccountId","setLoginAccountId","clickedChildObj","setClickedChildObj","showChildProfile","setShowChildProfile","savingGoalExists","setSavingGoalExists","handleClick","evt","isChildId","child","childId","target","id","children","find","console","log","goalAmount","map","index","accountId","userName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport NavFooterAdults from '../containers/Adults/NavFooterAdults'\nimport SettingsAdults from '../containers/Adults/SettingsAdults'\nimport TotalSavingsAdults from '../containers/Adults/TotalSavingsAdults'\nimport SavingGoalAdults from '../containers/Adults/SavingGoalAdults'\n\nexport default function Adults({dbAccount, dbParent, dbChildren}) {\n\n    //NOTE expect accountId from login ok? \n    const [loginAccountId, setLoginAccountId] = useState(1); //get from local storage\n    const [clickedChildObj, setClickedChildObj] = useState({});\n    const [showChildProfile, setShowChildProfile] = useState(false);\n    // const [goalAmount, setGoalAmount] = useState(Number);\n    const [savingGoalExists, setSavingGoalExists] = useState(false);\n\n    const handleClick = (evt) => {\n\n        // reset savingGoalExists\n        if (savingGoalExists === true) {\n            setSavingGoalExists(false);\n        }\n        if (savingGoalExists === false) {\n            setSavingGoalExists(true);\n        } \n\n        setShowChildProfile(true);\n\n\n        //Save clickedChildInfo:\n        //NOTE if === => not working :( \n        const isChildId = (child) => {\n            return child.childId == evt.target.id;\n        };\n        setClickedChildObj(dbChildren.children.find(isChildId));\n        \n        //Fix error:\n        console.log(\"clickedChildObj goalAmount\", dbChildren.children.find(isChildId).goalAmount)\n\n        if (dbChildren.children.find(isChildId).goalAmount != 0) {\n            setSavingGoalExists(true);\n            console.log(\"savingGoalExists\", savingGoalExists);\n        } else {\n            console.log(\"savingGoalNOT exists\", savingGoalExists);\n        }\n        \n    };\n    \n    return (\n        <div id=\"adultsContainer\">\n            <SettingsAdults />\n\n            {/* prints childBtns: */}\n            {\n                dbChildren.children.map( (child, index) => child.accountId === loginAccountId ? \n                <button id={child.childId} key={index} value={child.userName}onClick={handleClick}>{child.userName}</button>\n                : \"\")\n            }   \n\n            {showChildProfile ? \n               <>\n                <h2>{clickedChildObj.userName}</h2>\n                <SavingGoalAdults clickedChildObj={clickedChildObj} savingGoalExists={savingGoalExists}/>\n\n                <TotalSavingsAdults clickedChildObj={clickedChildObj}/>\n               </>\n            : \"\"}\n           \n            <NavFooterAdults />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}