{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\sparis\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Login.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    dbParent,\n    dbChildren\n  } = _ref;\n  // React States\n  const [logedInUser, setLogedInUser] = useState({\n    userName: \"\",\n    password: \"\",\n    accountId: \"\"\n  });\n  const [errorMessages, setErrorMessages] = useState({\n    name: \"\",\n    message: \"\"\n  });\n  const [isAdult, setIsAdult] = useState(false);\n  const [isChild, setIsChild] = useState(false);\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault(); // Find user login info\n\n    const userParent = dbParent.parents.find(account => account.userName === logedInUser.userName);\n    const userChild = dbChildren.children.find(account => account.userName === logedInUser.userName); // Compare user info with parents info\n\n    if (userParent) {\n      {\n        console.log(userParent);\n      }\n\n      if (userParent.password !== logedInUser.password) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsAdult(true);\n        setLogedInUser(previousState => {\n          return { ...previousState,\n            accountId: userParent.accountId\n          };\n        });\n      }\n    } else {\n      // Compare user info with child info\n      if (userChild) {\n        if (userChild.password !== logedInUser.password) {\n          // Invalid password\n          setErrorMessages({\n            name: \"pass\",\n            message: errors.pass\n          });\n        } else {\n          setIsChild(true);\n          setLogedInUser(previousState => {\n            return { ...previousState,\n              accountId: userChild.accountId\n            };\n          });\n        }\n      } else {\n        // Username not found\n        setErrorMessages({\n          name: \"uname\",\n          message: errors.uname\n        });\n      }\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          onChange: event => setLogedInUser(previousState => {\n            return { ...previousState,\n              userName: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          onChange: event => setLogedInUser(previousState => {\n            return { ...previousState,\n              password: event.target.value\n            };\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: isAdult ? /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/Adults\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.parentButton,\n        onClick: () => localStorage.setItem(\"accountId\", logedInUser.accountId),\n        children: [\"v\\xE4lkommen \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", logedInUser.userName.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 67\n        }, this), \" klicka f\\xF6r att se din sida\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : isChild ? /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/Children\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.childButton,\n        onClick: () => localStorage.setItem(\"accountId\", logedInUser.accountId),\n        children: [\"v\\xE4lkommen \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: logedInUser.userName.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 67\n        }, this), \" klicka f\\xF6r att se din sida\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : renderForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"5sChUpE0NStTeEDfLAuELp6AnP4=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/sparis/src/components/Login/Login.js"],"names":["React","useState","styles","Link","Login","dbParent","dbChildren","logedInUser","setLogedInUser","userName","password","accountId","errorMessages","setErrorMessages","name","message","isAdult","setIsAdult","isChild","setIsChild","errors","uname","pass","handleSubmit","event","preventDefault","userParent","parents","find","account","userChild","children","console","log","previousState","renderErrorMessage","error","renderForm","loginForm","title","inputContainer","target","value","buttonContainer","app","pathname","parentButton","localStorage","setItem","toUpperCase","childButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Login({ dbParent, dbChildren }) {\r\n  // React States\r\n  const [logedInUser, setLogedInUser] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    accountId: \"\",\r\n  });\r\n  const [errorMessages, setErrorMessages] = useState({ name: \"\", message: \"\" });\r\n  const [isAdult, setIsAdult] = useState(false);\r\n  const [isChild, setIsChild] = useState(false);\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\",\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    // Find user login info\r\n    const userParent = dbParent.parents.find(\r\n      (account) => account.userName === logedInUser.userName\r\n    );\r\n    const userChild = dbChildren.children.find(\r\n      (account) => account.userName === logedInUser.userName\r\n    );\r\n\r\n    // Compare user info with parents info\r\n    if (userParent) {\r\n      {\r\n        console.log(userParent);\r\n      }\r\n      if (userParent.password !== logedInUser.password) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsAdult(true);\r\n        setLogedInUser((previousState) => {\r\n          return { ...previousState, accountId: userParent.accountId };\r\n        });\r\n      }\r\n    } else {\r\n          // Compare user info with child info\r\n      if (userChild) {\r\n        if (userChild.password !== logedInUser.password) {\r\n          // Invalid password\r\n          setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        } else {\r\n          setIsChild(true);\r\n          setLogedInUser((previousState) => {\r\n            return { ...previousState, accountId: userChild.accountId };\r\n          });\r\n        }\r\n      } else {\r\n        // Username not found\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n      }\r\n    }\r\n  \r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className={styles.error}>{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className={styles.loginForm}>\r\n      <div className={styles.title}>Sign In</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.inputContainer}>\r\n          <label>Username </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"uname\"\r\n            onChange={(event) =>\r\n              setLogedInUser((previousState) => {\r\n                return { ...previousState, userName: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <label>Password </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"pass\"\r\n            onChange={(event) =>\r\n              setLogedInUser((previousState) => {\r\n                return { ...previousState, password: event.target.value };\r\n              })\r\n            }\r\n            required\r\n          />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      {isAdult ? (\r\n        <Link to={{ pathname: \"/Adults\" }}>\r\n          <button\r\n            className={styles.parentButton}\r\n            onClick={() =>\r\n              localStorage.setItem(\"accountId\", logedInUser.accountId)\r\n            }\r\n          >\r\n            välkommen <b> {logedInUser.userName.toUpperCase()}</b><br/> klicka för\r\n            att se din sida{\" \"}\r\n          </button>\r\n        </Link>\r\n      ) : isChild ? (\r\n        <Link to={{ pathname: \"/Children\" }}>\r\n          <button\r\n            className={styles.childButton}\r\n            onClick={() =>\r\n              localStorage.setItem(\"accountId\", logedInUser.accountId)\r\n            }\r\n          >\r\n            välkommen <b>{logedInUser.userName.toUpperCase()}</b> <br/> klicka för att\r\n            se din sida{\" \"}\r\n          </button>\r\n        </Link>\r\n      ) : (\r\n        renderForm\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}